/*
 * Blockmate
 *
 * Blockmate API OpenAPI documentation
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Io.Blockmate.Client.OpenAPIDateConverter;

namespace Io.Blockmate.Model
{
    /// <summary>
    /// AddressRiskReportDetails
    /// </summary>
    [DataContract]
    public partial class AddressRiskReportDetails :  IEquatable<AddressRiskReportDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AddressRiskReportDetails" /> class.
        /// </summary>
        /// <param name="ownCategories">ownCategories.</param>
        /// <param name="sourceOfFundsCategories">sourceOfFundsCategories.</param>
        public AddressRiskReportDetails(List<RiskReportCategory> ownCategories = default(List<RiskReportCategory>), List<RiskReportCategory> sourceOfFundsCategories = default(List<RiskReportCategory>))
        {
            this.OwnCategories = ownCategories;
            this.SourceOfFundsCategories = sourceOfFundsCategories;
        }

        /// <summary>
        /// Gets or Sets OwnCategories
        /// </summary>
        [DataMember(Name="own_categories", EmitDefaultValue=false)]
        public List<RiskReportCategory> OwnCategories { get; set; }

        /// <summary>
        /// Gets or Sets SourceOfFundsCategories
        /// </summary>
        [DataMember(Name="source_of_funds_categories", EmitDefaultValue=false)]
        public List<RiskReportCategory> SourceOfFundsCategories { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AddressRiskReportDetails {\n");
            sb.Append("  OwnCategories: ").Append(OwnCategories).Append("\n");
            sb.Append("  SourceOfFundsCategories: ").Append(SourceOfFundsCategories).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AddressRiskReportDetails);
        }

        /// <summary>
        /// Returns true if AddressRiskReportDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of AddressRiskReportDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AddressRiskReportDetails input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.OwnCategories == input.OwnCategories ||
                    this.OwnCategories != null &&
                    input.OwnCategories != null &&
                    this.OwnCategories.SequenceEqual(input.OwnCategories)
                ) && 
                (
                    this.SourceOfFundsCategories == input.SourceOfFundsCategories ||
                    this.SourceOfFundsCategories != null &&
                    input.SourceOfFundsCategories != null &&
                    this.SourceOfFundsCategories.SequenceEqual(input.SourceOfFundsCategories)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OwnCategories != null)
                    hashCode = hashCode * 59 + this.OwnCategories.GetHashCode();
                if (this.SourceOfFundsCategories != null)
                    hashCode = hashCode * 59 + this.SourceOfFundsCategories.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
